from django.db import models
from datasets.models import Dataset
# Create your models here.
class TaskDownload(models.Model):
    task_name = models.CharField(max_length=255)
    class_id = models.CharField(max_length=255)
    dataset_id = models.ForeignKey(Dataset, on_delete=models.CASCADE, related_name='dataset_id')
    status = models.CharField(max_length=255,default='Ready')
    priority = models.CharField(max_length=255,default='High')
    duration = models.CharField(max_length=255,default='Indefinitely')
    task_start_time = models.DateTimeField()
    next_run_time = models.DateTimeField()
    last_run_time = models.DateTimeField()
    next_download_file = models.CharField(max_length=255)
    last_download_file = models.CharField(max_length=255)
    enabled = models.BooleanField()
    health = models.CharField(max_length=255,default='Excellent')
    fail_count = models.IntegerField(default=0)
    success_count = models.IntegerField(default=0)
    reset_count = models.IntegerField(default=0)
    attempt_count = models.IntegerField(default=0)
    predecessor_class = models.CharField(max_length=255,null=True,blank=True)
    predecessor_class_id = models.IntegerField(null=True,blank=True)
    successor_class = models.CharField(max_length=255,null=True,blank=True)
    successor_class_id = models.IntegerField(null=True,blank=True)
    created_by = models.CharField(max_length=255,default='root')
    launched_by = models.CharField(max_length=255,default='root')
    retain = models.BooleanField()
    retention_days = models.CharField(max_length=255,null=True,blank=True)
